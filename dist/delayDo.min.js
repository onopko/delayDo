/*
 *  delayDo - v1.0.0
 *  delayDo is a tiny jQuery plugin. It enables you to  create a specific timer which contains some functions as a queue and can resume it later.
 *  http://onopko.github.io/delayDo/
 *
 *  Made by Takehiko Ono
 *  Under MIT License
 */
!function(a,b,c){"use strict";function d(a,b){this.queueObj={},this.init(a,b)}var e="delayDo";a.extend(d.prototype,{init:function(a,b){this.push(a,b)},push:function(a,b){var d=this;d.queueObj[a]||(d.queueObj[a]={queue:[],timer:null,cancel:function(b){b!==c&&"triggeredByCancelMethod"===b?(d.queueObj[a].timer&&d.queueObj[a].timer.pause(),d.queueObj[a].timer=null,d.queueObj[a].queue=[],d.queueObj[a]=null):d.queueObj[a].timer&&(d.queueObj[a].timer.pause(),d.queueObj[a].timer=null,d.queueObj[a]=null)}}),d.queueObj[a].queue.push(b)},resume:function(b){var c=a.extend({timerId:null,interval:100,delay:null,complete:null},b),d=this,e=function(){d.queueObj[c.timerId].cancel(),d.queueObj[c.timerId].timer=a.setAnimationFrameTimeout(function(){var a=d.queueObj[c.timerId].queue.shift();a?a():(d.queueObj[c.timerId].cancel(),"function"==typeof c.complete&&c.complete()),a=void 0},c.interval)};if(!d.queueObj[c.timerId])return!1;if(null===c.delay||"number"!=typeof c.delay)return e(),this;var f=a.setAnimationFrameTimeout(function(){return e(),f.pause(),f=void 0,this},c.delay)},cancel:function(a){return this.queueObj[a]?(this.queueObj[a].cancel("triggeredByCancelMethod"),this):!1},bustercall:function(){a.each(this.queueObj,function(){this.cancel("triggeredByCancelMethod")})}}),a[e]=function(b,c){return"string"==typeof b&&"function"==typeof c?(a.data(this,"plugin_"+e)?a.data(this,"plugin_"+e).push(b,c):a.data(this,"plugin_"+e,new d(b,c)),this):!1},a[e].resume=function(b){return a.data(a,"plugin_"+e)?void a.data(a,"plugin_"+e).resume(b):!1},a[e].cancel=function(b){return a.data(a,"plugin_"+e)?void a.data(a,"plugin_"+e).cancel(b):!1},a[e].bustercall=function(){return a.data(a,"plugin_"+e)?void a.data(a,"plugin_"+e).bustercall():!1}}(jQuery,window);